{"ast":null,"code":"var _jsxFileName = \"/Users/lizixing/Desktop/web_study/React/demo/src/components/public/PrivateRoute.jsx\";\nimport React from 'react';\nimport { useHistory, Route, Redirect } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute(props) {\n  const isLogin = window.sessionStorage.getItem(\"username\") ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLogin ? /*#__PURE__*/_jsxDEV(Route, {\n      path: props.path,\n      component: props.component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/lizixing/Desktop/web_study/React/demo/src/components/public/PrivateRoute.jsx"],"names":["React","useHistory","Route","Redirect","useState","useEffect","PrivateRoute","props","isLogin","window","sessionStorage","getItem","path","component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAmBC,KAAnB,EAAyBC,QAAzB,QAAwC,kBAAxC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAMC,OAAO,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,IAA4C,IAA5C,GAAmD,KAAnE;AACA,sBAEI;AAAA,cACKH,OAAO,gBAAG,QAAC,KAAD;AAAO,MAAA,IAAI,EAAED,KAAK,CAACK,IAAnB;AAAyB,MAAA,SAAS,EAAEL,KAAK,CAACM;AAA1C;AAAA;AAAA;AAAA;AAAA,YAAH,gBACR,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQH;KAVuBP,Y","sourcesContent":["import React from 'react'\nimport {useHistory,Route,Redirect} from 'react-router-dom'\nimport { useState, useEffect } from 'react';\nexport default function PrivateRoute(props) {\n    const isLogin = window.sessionStorage.getItem(\"username\") ? true : false\n    return (\n        \n        <div>\n            {isLogin ? <Route path={props.path} component={props.component}></Route> : \n            <Redirect to=\"/\"></Redirect>} \n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}