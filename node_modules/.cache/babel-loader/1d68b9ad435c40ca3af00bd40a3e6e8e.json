{"ast":null,"code":"var _jsxFileName = \"/Users/lizixing/Desktop/web_study/React/demo/src/components/public/PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute(props) {\n  const isLogin = window.sessionStorage.getItem(\"username\") ? true : false;\n\n  if (!isLogin) {\n    message.warning('This is a success message');\n  }\n\n  return isLogin ? /*#__PURE__*/_jsxDEV(Route, {\n    path: props.path,\n    component: props.component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/lizixing/Desktop/web_study/React/demo/src/components/public/PrivateRoute.jsx"],"names":["React","Route","Redirect","PrivateRoute","props","isLogin","window","sessionStorage","getItem","message","warning","path","component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,kBAA7B;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAMC,OAAO,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,IAA4C,IAA5C,GAAmD,KAAnE;;AACA,MAAG,CAACH,OAAJ,EAAY;AACRI,IAAAA,OAAO,CAACC,OAAR,CAAgB,2BAAhB;AACH;;AACD,SACIL,OAAO,gBACP,QAAC,KAAD;AAAO,IAAA,IAAI,EAAED,KAAK,CAACO,IAAnB;AAAyB,IAAA,SAAS,EAAEP,KAAK,CAACQ;AAA1C;AAAA;AAAA;AAAA;AAAA,UADO,gBAGP;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAJJ;AAQH;KAbuBT,Y","sourcesContent":["import React from 'react'\nimport {Route,Redirect} from 'react-router-dom'\n\nexport default function PrivateRoute(props) {\n    const isLogin = window.sessionStorage.getItem(\"username\") ? true : false\n    if(!isLogin){    \n        message.warning('This is a success message');       \n    }\n    return ( \n        isLogin ? \n        <Route path={props.path} component={props.component}></Route>     \n        : \n        <div>\n            <Redirect to=\"/\"></Redirect>   \n        </div>        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}